;;
;; @author naoiwata
;; project Euler problem 2
;; Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;; By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

(add-load-path "../lib" :relative)
(load "lib.scm")

(define (q2 n)
	(q2-iter 0 n))

(define (q2-iter sum n)
	(cond 
		((= n 0) sum)
		((even? n) (q2-iter (+ sum (Fib n)) (- n 1)))
		(else (q2-iter sum (- n 1)))))

(print (q2 10000))

;; END


